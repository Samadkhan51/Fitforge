services:
  postgres-db:
    image: postgres:15-alpine
    container_name: fitforge-postgres-db
    environment:
      - POSTGRES_USER=fitforge
      - POSTGRES_PASSWORD=fitforgepassword
      - POSTGRES_DB=fitforgedb
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fitforge -d fitforgedb"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 30s

  # --- NEW SERVICE ---
  db-seeder:
    build: . # It will use the same Docker image as your main app
    depends_on:
      postgres-db:
        condition: service_healthy # It waits for the database to be ready
    command: python seed_db.py # This is the command it runs

  agent-api:
    container_name: fitforge-agent-api
    build: .
    ports:
      - "8000:8000"
    depends_on:
      # --- MODIFIED DEPENDENCY ---
      # Now, the agent waits for the seeder to finish its job
      db-seeder:
        condition: service_completed_successfully
    environment:
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - OLLAMA_MODEL=${OLLAMA_MODEL}
      - DATABASE_URL=postgresql://fitforge:fitforgepassword@postgres-db:5432/fitforgedb
      - OLLAMA_API_BASE=${OLLAMA_API_BASE}
      - LITELLM_DEBUG=${LITELLM_DEBUG}
      - OLLAMA_KEEP_ALIVE=${OLLAMA_KEEP_ALIVE}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_API_BASE=${OPENAI_API_BASE}

volumes:
  postgres-data:
    driver: local